name: verify
on: 
  pull_request:
    branches:
      - main
jobs:
  python:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Prepare environment
      working-directory: webhook
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
    - name: Lint with Flake8
      id: linting
      working-directory: webhook
      run: flake8
    - name: Verify ping event python-lambda
      id: lambda-run
      working-directory: webhook
      run: lambda invoke -v --event-file event-ping.json
    - name: Update pull request
      uses: actions/github-script@v5
      with:    
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Python Style üñå\`${{ steps.linting.outcome }}\`
          #### Python lambda test run ‚öôÔ∏è\`${{ steps.lambda-run.outcome }}\``;

          await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output      
          })
          
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
      myregion: eu-central-1
      githubOwner: LWXE
      githubSecretName: githubToken
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v1
      - name: Terraform init
        id: init
        working-directory: infrastructure
        run: terraform init
      - name: Terraform format
        id: format
        working-directory: infrastructure
        run: terraform fmt -check
      - name: Terraform validate
        id: validate
        working-directory: infrastructure
        run: terraform validate -no-color
      - name: Terraform plan 
        id: plan
        working-directory: infrastructure
        run: terraform plan  -no-color -var "myregion=$myregion" -var "githubOwner=$githubOwner" -var "githubSecretName=$githubSecretName" -var "accountId=$AWS_ACCOUNT_ID"
      - name: Update pull request
        uses: actions/github-script@v5
        env:    
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:    
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.format.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`

            <details><summary>Show Plan</summary>
            \`\`\`\n      ${process.env.PLAN}      \`\`\`
            </details>`;

            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output      
            })